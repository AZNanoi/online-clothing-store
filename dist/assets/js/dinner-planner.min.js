/*! dinner-planner Thu Mar 09 2017 05:10:50 */
var onlineClothingStoreApp = angular.module("onlineClothingStore", [ "ngRoute", "ngResource", "ngCookies" ]);

onlineClothingStoreApp.config([ "$routeProvider", "$locationProvider", function(a, b) {
    b.html5Mode(!0), a.when("/", {
        templateUrl: "assets/partials/home.html",
        controller: "HomeCtrl"
    }).when("/home", {
        templateUrl: "assets/partials/home.html",
        controller: "HomeCtrl"
    }).when("/item/:itemId", {
        templateUrl: "assets/partials/item.html",
        controller: "ItemCtrl"
    }).when("/login", {
        templateUrl: "assets/partials/login.html",
        controller: "LogInCtrl"
    }).when("/profile", {
        templateUrl: "assets/partials/profile.html",
        controller: "ProfileCtrl"
    }).when("/cart", {
        templateUrl: "assets/partials/cart.html",
        controller: "CartCtrl"
    }).when("/receipt/:orderNr", {
        templateUrl: "assets/partials/receipt.html",
        controller: "ReceiptCtrl"
    }).when("/edit-account", {
        templateUrl: "assets/partials/edit-account.html",
        controller: "EditAccountCtrl"
    }).when("/register", {
        templateUrl: "assets/partials/register.html",
        controller: "RegisterCtrl"
    }).when("/help-contact", {
        templateUrl: "assets/partials/help-contact.html",
        controller: "helpContactCtrl"
    }).when("/reset-password", {
        templateUrl: "assets/partials/reset-password.html",
        controller: "ResetPasswordCtrl"
    }).when("/change-password", {
        templateUrl: "assets/partials/change-password.html",
        controller: "ChangePasswordCtrl"
    }).when("/search", {
        templateUrl: "assets/partials/search.html",
        controller: "SearchCtrl"
    }).otherwise({
        redirectTo: "/"
    });
} ]), onlineClothingStoreApp.filter("shorten", function() {
    return function(a) {
        return a.length > 18 ? a.substr(0, 18) + "..." : a;
    };
}), $(document).mouseup(function(a) {
    var b = $("#dropdownMenu"), c = $("#dMenu-icon");
    c.is(a.target) || b.is(a.target) || (b.hide(), $(c).css("background-image", "url(assets/images/menu-icon.png)"));
    var d = $("#search-input-frame");
    $("#search_input>input").is(a.target) || d.is(a.target) || d.hide();
}), onlineClothingStoreApp.factory("Service", [ "$q", "$resource", "$cookieStore", function(a, b, c) {
    function d(b) {
        var c = a.defer();
        return e.child(b).once("value", function(a) {
            var b = a.val();
            c.resolve(b);
        }), c;
    }
    this.dataRef = new Firebase("https://clothing-store.firebaseio.com/");
    var e = this.dataRef.child("users");
    this.userName = "";
    var f = "null";
    return this.authData = this.dataRef.getAuth(), this.authData && (f = this.authData.uid), 
    this.resetPassword = function(a) {
        alert(a), this.dataRef.resetPassword({
            email: a
        }, function(a) {
            if (a) switch (a.code) {
              case "INVALID_USER":
                console.log("The specified user account does not exist.");
                break;

              default:
                console.log("Error resetting password:", a);
            } else console.log("Password reset email sent successfully!");
        });
    }, this.changePassword = function(a, b) {
        email = this.authData.password.email, this.dataRef.changePassword({
            email: email,
            oldPassword: a,
            newPassword: b
        }, function(a) {
            if (a) switch (a.code) {
              case "INVALID_PASSWORD":
                console.log("The specified user account password is incorrect.");
                break;

              case "INVALID_USER":
                console.log("The specified user account does not exist.");
                break;

              default:
                console.log("Error changing password:", a);
            } else console.log("User password changed successfully!");
        });
    }, void 0 === c.get("items") && c.put("items", []), this.saveOrders = function(a) {
        e.child(f + "/orders/" + a.orderNr).set(a);
    }, this.getOrder = function(a) {
        return d(f + "/orders/" + a);
    }, this.generateGUID = function() {
        function a() {
            return Math.floor(4096 * (1 + Math.random())).toString(16).substring(1);
        }
        return a() + a() + a() + a();
    }, this.logIn = function(a, b) {
        this.dataRef.authWithPassword(a, function(a, c) {
            a ? (console.log("Login Failed!", a), b("deny")) : (console.log("Authenticated successfully with payload:", c), 
            this.authData = c, f = c.uid, b("success"));
        }, {
            remember: "sessionOnly"
        });
    }, this.logOut = function() {
        this.dataRef.unauth();
    }, this.createProfile = function(a, b, c) {
        var d = this;
        this.dataRef.createUser({
            email: a.email,
            password: a.password
        }, function(g, h) {
            g ? (console.log("Error creating user:", g), c(g)) : (console.log("Successfully created user account with uid:", h.uid), 
            f = h.uid, d.logIn(a, function(a) {
                "success" == a && (e.child(h.uid).set(b), c("success"));
            }));
        });
    }, this.getProfile = function() {
        return d(f);
    }, this.updateProfile = function(a) {
        console.log(f), e.child(f).update(a);
    }, this.addToCart = function(a) {
        items = c.get("items"), items.push(a), c.put("items", items);
    }, this.deleteFromCart = function(a) {
        items = c.get("items");
        for (var b in items) a.Id == items[b].Id && a.size == items[b].size && items.splice(b, 1);
        c.put("items", items);
    }, this.emptyCart = function() {
        c.put("items", []);
    }, this.getCart = function() {
        return c.get("items");
    }, this.calTotalCost = function(a) {
        var b = 0;
        for (var c in a) b += parseInt(a[c].price) * parseInt(a[c].amount);
        return b;
    }, this.getItems = b("/REST_API/items/index.php", {
        get: {
            method: "GET",
            cache: !0
        }
    }), this.getItem = b("/REST_API/item/index.php", {
        get: {
            method: "GET",
            cache: !0
        }
    }), this;
} ]), onlineClothingStoreApp.controller("SliderCtrl", [ "$scope", function(a) {
    navigator.msMaxTouchPoints && $("#slider").addClass("ms-touch"), navigator.msMaxTouchPoints ? ($("#slider").addClass("ms-touch"), 
    $("#slider").on("scroll", function() {
        $(".slide-image").css("transform", "translate3d(-" + (100 - $(this).scrollLeft() / 6) + "px,0,0)");
    })) : (a.slider = {
        el: {
            slider: $("#slider"),
            holder: $(".holder"),
            imgSlide: $(".slide-image")
        },
        slideWidth: $("#slider").width(),
        touchstartx: void 0,
        touchmovex: void 0,
        movex: void 0,
        index: 0,
        longTouch: void 0,
        init: function() {
            this.bindUIEvents();
        },
        bindUIEvents: function() {
            this.el.holder.on("touchstart", function(b) {
                a.slider.start(b);
            }), this.el.holder.on("touchmove", function(b) {
                a.slider.move(b);
            }), this.el.holder.on("touchend", function(b) {
                a.slider.end(b);
            });
        },
        start: function(b) {
            this.longTouch = !1, setTimeout(function() {
                a.slider.longTouch = !0;
            }, 250), this.touchstartx = b.originalEvent.touches[0].pageX, $(".animate").removeClass("animate");
        },
        move: function(a) {
            this.touchmovex = a.originalEvent.touches[0].pageX, this.movex = this.index * this.slideWidth + (this.touchstartx - this.touchmovex);
            var b = this.movex / 6;
            this.movex < 600 && $(".holder").width() > this.slideWidth && this.el.holder.css("transform", "translate3d(-" + this.movex + "px,0,0)"), 
            b < 0 && this.el.imgSlide.css("transform", "translate3d(-" + b + "px,0,0)");
        },
        end: function(a) {
            (Math.abs(this.index * this.slideWidth - this.movex) > this.slideWidth / 4 || this.longTouch === !1 && $(".holder").width() > this.slideWidth) && (this.movex > this.index * this.slideWidth && this.index < 2 ? this.index++ : this.movex < this.index * this.slideWidth && this.index > 0 && this.index--), 
            $(".holder").width() > this.slideWidth && (console.log("a"), this.el.holder.addClass("animate").css("transform", "translate3d(-" + this.index * this.slideWidth + "px,0,0)"), 
            this.el.imgSlide.addClass("animate").css("transform", "translate3d(-50" - 50 * this.index + "px,0,0)"), 
            $(".g_thumbnail>img").css("border", "0px solid #00c7ff"), $(".g_thumbnail").find('[data-id="' + this.index + '"]').css("border", "2px solid #00c7ff"));
        }
    }, a.slider.init());
} ]), onlineClothingStoreApp.controller("AppCtrl", [ "$scope", function(a) {
    navigator.userAgent.match(/OPR|iPhone|Android|Opera|Symbian|Motorola|Nokia|Siemens|Samsung|Ericsson|LG|NEC|SEC|MIDP|Windows CE/i) ? (a.style_css = "style_mobile.css", 
    a.mobile_device = !0) : (a.style_css = "style.css", a.mobile_device = !1), a.$back = function() {
        window.history.back();
    };
} ]), onlineClothingStoreApp.controller("CartCtrl", [ "$scope", "Service", "$location", function(a, b, c) {
    var d = b.getCart(), e = b.generateGUID(), f = new Date(), g = f.getHours(), h = f.getMinutes(), i = f.getSeconds();
    g < 10 && (g = "0" + g), h < 10 && (h = "0" + h), i < 10 && (i = "0" + i);
    var j = f.getDate() + "-" + f.getMonth() + "-" + f.getFullYear() + "T" + g + ":" + h + ":" + i;
    a.cart = {
        orderNr: e,
        date: j,
        shipped: "Ongoing",
        items: d
    }, a.saveOrders = function(d) {
        d.preventDefault(), b.authData ? (b.saveOrders(a.cart), b.emptyCart(), c.path("/receipt/" + e)) : c.path("/login");
    }, a.removeItem = function(c) {
        var d = c.target.dataset.item, e = JSON.parse(d);
        b.deleteFromCart(e), a.cart.items = b.getCart(), a.getTotalCost();
    }, a.getTotalCost = function() {
        var a = b.getCart();
        return b.calTotalCost(a);
    };
} ]), onlineClothingStoreApp.controller("ChangePasswordCtrl", [ "$scope", "Service", function(a, b) {
    a.not_changed = !0, a.changed = !1, a.statusDisplay = !1, a.changePassword = function(c) {
        console.log(c.$valid), c.$valid ? a.oldPassword !== a.newPassword ? (a.statusDisplay = !0, 
        a.status = "The passwords are not matched!") : (a.statusDisplay = !1, b.changePassword(a.oldPassword, a.newPassword), 
        a.changed = !0, a.not_changed = !1) : (a.statusDisplay = !0, a.status = "Invalid data input!");
    };
} ]), onlineClothingStoreApp.controller("EditAccountCtrl", [ "$scope", "Service", "$controller", "$location", function(a, b, c, d) {
    c("ProfileCtrl", {
        $scope: a
    }), a.noSuccesed = !1, a.updateProfile = function(c) {
        if (c.$valid) {
            a.noSuccesed = !1;
            var e = {
                fname: a.fname,
                lname: a.lname,
                mobile: a.mobile
            }, f = {
                co: a.co,
                street: a.street,
                postalCode: a.postalCode,
                city: a.city
            }, g = {
                personalDetails: e,
                shippingAddress: f
            };
            b.updateProfile(g), d.path("/profile");
        } else a.noSuccesed = !0, a.message = "Incorrect input data!";
    };
} ]), onlineClothingStoreApp.controller("helpContactCtrl", [ "$scope", "$rootScope", "$location", "Service", "$cookieStore", "$location", function(a, b, c, d, e, c) {
    function f(b) {
        a.displayedSlide = "Featured" == b;
    }
    function g(a) {
        var b = $("ul").find(".selected");
        b.css("background-color", "rgba(128,128,128,0.6)"), b.attr("class", ""), $("#" + a).css("background-color", "rgba(0,0,0,0.7)"), 
        $("#" + a).attr("class", "selected");
    }
    b.$on("CallUpdateCategory", function(b, c) {
        a.updateCategory(c.category, c.e);
    });
    var h;
    a.displayedArrows = !1;
    var i = a.$parent.$parent;
    i.mobile_device ? $(".categories").remove() : i.mobile_device === !1 && $(".categories").css("display", "block"), 
    h = void 0 === e.get("categoryName") ? "Featured" : e.get("categoryName"), f(h), 
    g(h), a.getItems = function(b, c) {
        a.categoryName = c.toUpperCase();
        var e = '{"' + b + '":"' + c + '"}', f = JSON.parse(e);
        d.getItems.get(f, function(c) {
            "category" === b ? a.category = c : a.searchResult = c;
        });
    }, a.getSearch = function(b) {
        a.getItems("keyword", b), e.put("query", b), c.path("/search");
    }, a.getItems("category", h), a.updateCategory = function(b, d) {
        d.preventDefault(), f(b), g(b), "Help-contact" !== b && e.put("categoryName", b), 
        a.getItems("category", b);
        var h = b.toLowerCase();
        i.mobile_device && "featured" === h ? h = "home" : i.mobile_device || "featured" !== h || (h = ""), 
        c.path("/" + h);
    }, a.keyUpFunction = function(b) {
        console.log(b), b.length > 0 ? (a.getItems("keyword", b), $("#search-input-frame").show()) : b !== !1 && " " !== b || $("#search-input-frame").hide();
    }, a.showArrows = function() {
        a.displayedArrows = !0;
    }, a.hideArrows = function() {
        a.displayedArrows = !1;
    }, d.getItems.get({
        category: "slideshow"
    }, function(a) {
        j = a.data;
    });
    var j, k = -1;
    a.displayNextImage = function() {
        k = k === j.length - 1 ? 0 : k + 1;
        var a = document.getElementById("imgSlideshow");
        null !== a && (a.src = j[k].imageUrl);
    }, a.displayPreviousImage = function() {
        k = k <= 0 ? j.length - 1 : k - 1, document.getElementById("imgSlideshow").src = j[k].imageUrl;
    };
    var l = setInterval(a.displayNextImage, 3e3);
    a.$on("$destroy", function() {
        clearInterval(l);
    });
} ]), onlineClothingStoreApp.controller("HomeCtrl", [ "$scope", "$rootScope", "$location", "Service", "$cookieStore", "$location", function(a, b, c, d, e, c) {
    function f(b) {
        a.displayedSlide = "Featured" == b;
    }
    function g(a) {
        var b = $("ul").find(".selected");
        b.css("background-color", "rgba(128,128,128,0.6)"), b.attr("class", ""), $("#" + a).css("background-color", "rgba(0,0,0,0.7)"), 
        $("#" + a).attr("class", "selected");
    }
    b.$on("CallUpdateCategory", function(b, c) {
        a.updateCategory(c.category, c.e);
    }), a.showSearchResult = !1;
    var h;
    a.displayedArrows = !1;
    var i = a.$parent.$parent;
    i.mobile_device ? $(".categories").remove() : i.mobile_device === !1 && $(".categories").css("display", "block"), 
    h = void 0 === e.get("categoryName") ? "Featured" : e.get("categoryName"), window.addEventListener("orientationchange", function() {
        window.screen.width > window.screen.height && window.screen.width <= 768 && $("#home").css("width", "100%");
    }, !1), f(h), g(h), a.getItems = function(b, c) {
        a.categoryName = c.toUpperCase();
        var e = '{"' + b + '":"' + c + '"}', f = JSON.parse(e);
        d.getItems.get(f, function(c) {
            "category" === b ? a.category = c : a.searchResult = c, c.data.length > 0 ? a.showSearchResult = !0 : a.showSearchResult = !1;
        });
    }, a.getSearch = function(b) {
        a.getItems("keyword", b), e.put("query", b), c.path("/search"), a.showSearchResult = !1;
    }, a.getItems("category", h), a.updateCategory = function(b, d) {
        d.preventDefault(), f(b), g(b), "Help-contact" !== b && e.put("categoryName", b), 
        a.getItems("category", b);
        var h = b.toLowerCase();
        i.mobile_device && "featured" === h ? h = "home" : i.mobile_device || "featured" !== h || (h = ""), 
        c.path("/" + h);
    }, a.keyUpFunction = function(b) {
        console.log(b), b.length > 0 ? (a.getItems("keyword", b), $("#search-input-frame").show()) : b !== !1 && "" !== b || (a.showSearchResult = !1);
    }, a.showArrows = function() {
        a.displayedArrows = !0;
    }, a.hideArrows = function() {
        a.displayedArrows = !1;
    }, d.getItems.get({
        category: "slideshow"
    }, function(a) {
        j = a.data;
    });
    var j, k = -1;
    a.displayNextImage = function() {
        if (void 0 !== j) {
            k = k === j.length - 1 ? 0 : k + 1;
            var a = document.getElementById("imgSlideshow");
            null !== a && (a.src = j[k].imageUrl);
        }
    }, a.displayPreviousImage = function() {
        k = k <= 0 ? j.length - 1 : k - 1, document.getElementById("imgSlideshow").src = j[k].imageUrl;
    };
    var l = setInterval(a.displayNextImage, 3e3);
    a.$on("$destroy", function() {
        clearInterval(l);
    });
} ]), onlineClothingStoreApp.controller("ItemCtrl", [ "$scope", "$routeParams", "Service", "$cookieStore", "$controller", "$q", function(a, b, c, d, e, f) {
    function g() {
        if ($("#statusMessage").css("color", "red"), (void 0 === a.selectedSize || null === a.selectedSize) && !a.oneSize) return a.statusMessage = "Choice a size!", 
        !0;
        if (void 0 === a.selectedColor || null === a.selectedColor) {
            if (!a.sold_out_s) return a.statusMessage = "Choice a color!", !0;
        } else if (a.selectedAmount > a.amount) return a.statusMessage = "Selected amount exceeds the available amount!", 
        !0;
        return !1;
    }
    function h(b) {
        b ? (a.b_disabled = !0, $(".add_to_cart").css("background-color", "rgba(117,117,117,0.35)"), 
        $(".add_to_cart").css("cursor", "auto")) : (a.b_disabled = !1, $(".add_to_cart").css("background-color", "rgba(9,199,101,0.75)"), 
        $(".add_to_cart").css("cursor", "pointer"));
    }
    e("HomeCtrl", {
        $scope: a
    }), e("SliderCtrl", {
        $scope: a
    }), a.childScope = {}, a.amount = 0, a.statusMessage = "", a.selectedAmount = 1, 
    a.addedToCart = !1, a.selectSize = !0, a.oneSize = !1, a.sold_out = !1, a.sold_out_s = !1, 
    a.imagesLength = f.defer(), h(!0), a.checkAmount = function() {
        g() ? h(!0) : (a.statusMessage = "", h(!1));
    }, a.addToCart = function() {
        var b = {
            Id: k,
            name: a.item.Name,
            price: a.item.Price,
            size: a.selectedSize,
            color: a.selectedColor,
            amount: a.selectedAmount
        };
        c.addToCart(b), a.childScope.itemsAmount = c.getCart().length, a.statusMessage = "Added to cart", 
        $("#statusMessage").css("color", "green");
    }, a.goToHome = function(a) {
        d.put("categoryName", a);
    }, a.getColors = function() {
        a.selectedColor = null, a.statusMessage = "";
        var b = [];
        if (a.selectedSize || a.oneSize) {
            for ($(".amount").css("color", "black"), i = 0; i < j.length; i++) a.selectedSize == j[i].Size && $.inArray(j[i].Color, b) == -1 ? b.push(j[i].Color) : a.oneSize && b.push(j[i].Color);
            a.colors = b, b.length < 1 ? (a.sold_out = !0, a.amount = 0, $(".amount").css("color", "red"), 
            h(!0)) : a.sold_out = !1;
        } else a.colors = void 0, h(!0);
        a.oneSize || a.getAmount();
    }, a.getAmount = function() {
        a.statusMessage = "";
        var b = 0;
        for (i = 0; i < j.length; i++) void 0 === a.selectedSize || null === a.selectedSize ? b += parseInt(j[i].Quantity) : void 0 === a.selectedColor || null === a.selectedColor ? a.selectedSize == j[i].Size && (b += parseInt(j[i].Quantity)) : a.selectedSize == j[i].Size && a.selectedColor == j[i].Color ? b = j[i].Quantity : a.oneSize && a.selectedColor == j[i].Color && (b = j[i].Quantity);
        a.amount = b, a.checkAmount();
    };
    var j, k = b.itemId;
    c.getItem.get({
        id: k
    }, function(b) {
        a.item = b, a.imagesLength.resolve(b.imageUrls.length), j = a.item.Quantities;
        var c = 0;
        for (i = 0; i < j.length; i++) c += parseInt(j[i].Quantity);
        a.amount = c, "Accessories" == b.Category ? (a.selectSize = !1, a.oneSize = !0, 
        a.getColors()) : a.sizes = [ "S", "M", "L" ], j.length < 1 && (a.sold_out = !0, 
        a.sold_out_s = !0), a.getItems("category", a.item.Category);
    }), a.changeImage = function(a) {
        var b = $(a.target).data("id");
        $(".holder").addClass("animate").css("transform", "translate3d(-" + parseInt($("#slider").width()) * parseInt(b) + "px,0,0)"), 
        $(".g_thumbnail>img").css("border", "0px solid #00c7ff"), $(".g_thumbnail").find('[data-id="' + b + '"]').css("border", "2px solid #00c7ff");
    };
} ]), onlineClothingStoreApp.controller("LogInCtrl", [ "$q", "$scope", "$location", "Service", function(a, b, c, d) {
    b.status = "", b.noSuccessed = !1, b.loading = !1, b.init = function() {
        d.dataRef.getAuth() && c.path("/home");
    }, b.init(), b.logIn = function() {
        b.loading = !0, $("#login").fadeTo(500, .3);
        var a = {
            email: b.email,
            password: b.password
        };
        d.logIn(a, function(a) {
            "success" === a ? (c.path("/home"), b.$apply(), b.loading = !1, b.noSuccessed = !1, 
            $("#loading").addClass("ng-hide"), $("#login").fadeTo(500, 1)) : (b.loading = !1, 
            b.noSuccessed = !0, $("#loading").addClass("ng-hide"), $(".response").removeClass("ng-hide"), 
            $("#login").fadeTo(500, 1), $(".response").text("Login Failed! Incorrect email or password!"));
        });
    };
} ]), onlineClothingStoreApp.controller("NavbarCtrl", [ "$scope", "$rootScope", "Service", function(a, b, c) {
    function d(b) {
        if (b) {
            c.getProfile().promise.then(function(b) {
                a.full_name = b.personalDetails.fname + " " + b.personalDetails.lname;
            }), a.loggedIn = !0, a.showMenuIcon = !0, a.notLoggedIn = !1, $(".shopping_cart").css("margin-right", "15px");
        } else a.full_name = "", a.loggedIn = !1, a.notLoggedIn = !0;
    }
    a.updateCategory = function(a, c) {
        b.$emit("CallUpdateCategory", {
            category: a,
            e: c
        });
    }, a.showMenuIcon = !1, a.menuIcon = "images/menu-icon.png", a.itemsAmount = c.getCart().length;
    var e = a.$parent.$parent;
    e.childScope = a, window.addEventListener("orientationchange", function() {
        window.screen.width > window.screen.height ? ($("#header").css("position", "absolute"), 
        console.log(window.screen.width), window.screen.width <= 1024 && $("#menu").css("position", "absolute")) : ($("#header").css("position", "fixed"), 
        $("#menu").css("position", "fixed"));
    }, !1), e.mobile_device ? (a.mobile_device = !0, $(".shopping_cart").css("margin-right", "20px")) : (a.showMenuIcon = !1, 
    a.mobile_device = !1), c.dataRef.onAuth(d), a.logOut = function() {
        c.logOut(), d(), a.dMenuDisplayed = !1, $(".shopping_cart").css("margin-right", "0px"), 
        a.toggleDMenu();
    }, a.toggleDMenu = function(a) {
        var b = $("#dropdownMenu"), c = $("#dMenu-icon");
        "none" == b.css("display") ? (b.css("display", "block"), c.css("background-image", "url(assets/images/menu-icon-gray.png)")) : (b.css("display", "none"), 
        c.css("background-image", "url(assets/images/menu-icon.png)"));
    };
} ]), onlineClothingStoreApp.controller("ProfileCtrl", [ "$scope", "Service", "$location", function(a, b, c) {
    a.init = function() {
        var d = b.dataRef.getAuth();
        d ? a.email = d.password.email : c.path("/home");
    }, a.init(), b.getProfile().promise.then(function(b) {
        a.full_name = b.personalDetails.fname + " " + b.personalDetails.lname, a.fname = b.personalDetails.fname, 
        a.lname = b.personalDetails.lname, a.mobile = b.personalDetails.mobile, a.co = b.shippingAddress.co, 
        a.street = b.shippingAddress.street, a.postalCode = b.shippingAddress.postalCode, 
        a.city = b.shippingAddress.city, a.orders = b.orders;
    }), a.calTotal = function(a) {
        return b.calTotalCost(a);
    };
} ]), onlineClothingStoreApp.controller("ReceiptCtrl", [ "$scope", "Service", "$routeParams", function(a, b, c) {
    a.orderNr = c.orderNr, b.getOrder(a.orderNr).promise.then(function(c) {
        a.items = c.items, a.totalCost = b.calTotalCost(a.items);
    });
} ]), onlineClothingStoreApp.controller("RegisterCtrl", [ "$scope", "Service", "$location", "$controller", function(a, b, c, d) {
    function e(b) {
        b ? (c.path("/home"), a.$apply()) : setTimeout(function() {
            e();
        }, 100);
    }
    a.co = "-", a.valid = !1, a.loading = !1, d("LogInCtrl", {
        $scope: a
    }), a.init(), a.createProfile = function(c) {
        a.loading = !0, $("#register").fadeTo(500, .3);
        var d = !1;
        if (c.$valid) if (a.password !== a.password2) a.loading = !1, $("#register").fadeTo(100, 1), 
        $("#error").text("Password doesn't match the confirm password!"); else {
            a.valid = !1;
            var f = {
                email: a.email,
                password: a.password
            }, g = {
                fname: a.fname,
                lname: a.lname,
                mobile: a.mobile,
                email: a.email
            }, h = {
                co: a.co,
                street: a.street,
                postalCode: a.postalCode,
                city: a.city
            }, i = {
                personalDetails: g,
                shippingAddress: h
            };
            b.createProfile(f, i, function(b) {
                "success" == b ? d = !0 : (a.loading = !1, $("#loading").addClass("ng-hide"), $("#register").fadeTo(500, 1), 
                $("#error").text("Error: The specified email address is already in use."));
            }), e(d);
        } else a.valid = !0;
    };
} ]), onlineClothingStoreApp.controller("ResetPasswordCtrl", [ "$scope", "Service", function(a, b) {
    a.not_sent = !0, a.sent = !1, a.resetPassword = function() {
        b.resetPassword(a.email), a.sent = !0, a.not_sent = !1;
    };
} ]), onlineClothingStoreApp.controller("SearchCtrl", [ "$scope", "Service", "$cookieStore", "$controller", function(a, b, c, d) {
    d("HomeCtrl", {
        $scope: a
    }), a.searchQuery = c.get("query"), a.searchResult = a.getItems("keyword", a.searchQuery);
} ]);